TranslationUnitDecl 0x2c1aec8 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x2c1b7a0 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x2c1b460 '__int128'
|-TypedefDecl 0x2c1b808 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x2c1b480 'unsigned __int128'
|-TypedefDecl 0x2c1bb48 <<invalid sloc>> <invalid sloc> implicit __NSConstantString '__NSConstantString_tag'
| `-RecordType 0x2c1b8f0 '__NSConstantString_tag'
|   `-CXXRecord 0x2c1b858 '__NSConstantString_tag'
|-TypedefDecl 0x2c55350 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x2c1bba0 'char *'
|   `-BuiltinType 0x2c1af60 'char'
|-TypedefDecl 0x2c55688 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list '__va_list_tag [1]'
| `-ConstantArrayType 0x2c55630 '__va_list_tag [1]' 1 
|   `-RecordType 0x2c55440 '__va_list_tag'
|     `-CXXRecord 0x2c553a0 '__va_list_tag'
|-CXXRecordDecl 0x2c556d8 <./testClass.hpp:3:1, line:7:1> line:3:8 referenced struct AAA definition
| |-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| | |-DefaultConstructor exists trivial
| | |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| | |-MoveConstructor exists simple trivial
| | |-CopyAssignment trivial has_const_param implicit_has_const_param
| | |-MoveAssignment exists simple trivial
| | `-Destructor simple irrelevant trivial
| |-CXXRecordDecl 0x2c557f8 <col:1, col:8> col:8 implicit struct AAA
| |-FieldDecl 0x2c558a8 <line:4:5, col:9> col:9 number 'int'
| |-FieldDecl 0x2c55900 <line:5:5, col:10> col:10 ch 'char'
| |-CXXMethodDecl 0x2c559d0 <line:6:5, col:17> col:10 method 'void ()'
| |-CXXMethodDecl 0x2c84620 <line:3:8> col:8 implicit constexpr operator= 'AAA &(const AAA &)' inline default trivial noexcept-unevaluated 0x2c84620
| | `-ParmVarDecl 0x2c84740 <col:8> col:8 'const AAA &'
| |-CXXMethodDecl 0x2c847d8 <col:8> col:8 implicit constexpr operator= 'AAA &(AAA &&)' inline default trivial noexcept-unevaluated 0x2c847d8
| | `-ParmVarDecl 0x2c84900 <col:8> col:8 'AAA &&'
| |-CXXDestructorDecl 0x2c84d50 <col:8> col:8 implicit ~AAA 'void () noexcept' inline default trivial
| |-CXXConstructorDecl 0x2c84f00 <col:8> col:8 implicit used AAA 'void () noexcept' inline default trivial
| | `-CompoundStmt 0x2c85328 <col:8>
| |-CXXConstructorDecl 0x2c84fe8 <col:8> col:8 implicit constexpr AAA 'void (const AAA &)' inline default trivial noexcept-unevaluated 0x2c84fe8
| | `-ParmVarDecl 0x2c85120 <col:8> col:8 'const AAA &'
| `-CXXConstructorDecl 0x2c85188 <col:8> col:8 implicit constexpr AAA 'void (AAA &&)' inline default trivial noexcept-unevaluated 0x2c85188
|   `-ParmVarDecl 0x2c852c0 <col:8> col:8 'AAA &&'
|-CXXRecordDecl 0x2c55a90 <line:9:1, line:18:1> line:9:7 class BBB definition
| |-DefinitionData polymorphic has_user_declared_ctor can_const_default_init
| | |-DefaultConstructor exists non_trivial user_provided
| | |-CopyConstructor simple non_trivial has_const_param implicit_has_const_param
| | |-MoveConstructor
| | |-CopyAssignment non_trivial has_const_param implicit_has_const_param
| | |-MoveAssignment
| | `-Destructor non_trivial user_declared
| |-CXXRecordDecl 0x2c55bb8 <col:1, col:7> col:7 implicit referenced class BBB
| |-FieldDecl 0x2c55c60 <line:11:5, col:9> col:9 aaa 'AAA'
| |-FieldDecl 0x2c55cc0 <line:12:5, col:9> col:9 class_number 'int'
| |-FieldDecl 0x2c55d18 <line:13:5, col:10> col:10 class_ch 'char'
| |-AccessSpecDecl 0x2c55d60 <line:14:1, col:7> col:1 public
| |-CXXConstructorDecl 0x2c55df8 <line:15:5, col:9> col:5 BBB 'void ()'
| |-CXXDestructorDecl 0x2c55ef8 <line:16:5, col:18> col:13 used ~BBB 'void () noexcept' virtual
| |-CXXMethodDecl 0x2c55fc8 <line:17:5, col:17> col:10 method 'void ()'
| |-CXXMethodDecl 0x2c56108 <line:9:7> col:7 implicit operator= 'BBB &(const BBB &)' inline default noexcept-unevaluated 0x2c56108
| | `-ParmVarDecl 0x2c56230 <col:7> col:7 'const BBB &'
| `-CXXConstructorDecl 0x2c85df8 <col:7> col:7 implicit constexpr BBB 'void (const BBB &)' inline default noexcept-unevaluated 0x2c85df8
|   `-ParmVarDecl 0x2c85f30 <col:7> col:7 'const BBB &'
|-CXXMethodDecl 0x2c849a8 parent 0x2c556d8 prev 0x2c559d0 <./testClass.cpp:3:1, col:20> col:11 method 'void ()'
| `-CompoundStmt 0x2c84a90 <col:19, col:20>
|-CXXMethodDecl 0x2c84ae0 parent 0x2c55a90 prev 0x2c55fc8 <line:5:1, col:20> col:11 method 'void ()'
| `-CompoundStmt 0x2c84bc8 <col:19, col:20>
|-CXXDestructorDecl 0x2c84c28 parent 0x2c55a90 prev 0x2c55ef8 <line:7:1, line:9:1> line:7:6 used ~BBB 'void () noexcept'
| `-CompoundStmt 0x2c85380 <col:12, line:9:1>
|   `-DeclStmt 0x2c85368 <line:8:5, col:12>
|     `-VarDecl 0x2c84e80 <col:5, col:9> col:9 aaa 'AAA' callinit
|       `-CXXConstructExpr 0x2c85338 <col:9> 'AAA' 'void () noexcept'
|-FunctionDecl 0x2c853d8 <<invalid sloc>> <invalid sloc> implicit operator new 'void *(unsigned long)'
| |-ParmVarDecl 0x2c854b8 <<invalid sloc>> <invalid sloc> implicit 'unsigned long'
| `-VisibilityAttr 0x2c85478 <<invalid sloc>> Implicit Default
|-FunctionDecl 0x2c85520 <<invalid sloc>> <invalid sloc> implicit operator new[] 'void *(unsigned long)'
| |-ParmVarDecl 0x2c85a40 <<invalid sloc>> <invalid sloc> implicit 'unsigned long'
| `-VisibilityAttr 0x2c855c0 <<invalid sloc>> Implicit Default
|-FunctionDecl 0x2c85b28 <<invalid sloc>> <invalid sloc> implicit used operator delete 'void (void *) noexcept'
| |-ParmVarDecl 0x2c85c08 <<invalid sloc>> <invalid sloc> implicit 'void *'
| `-VisibilityAttr 0x2c85bc8 <<invalid sloc>> Implicit Default
|-FunctionDecl 0x2c85c70 <<invalid sloc>> <invalid sloc> implicit operator delete[] 'void (void *) noexcept'
| |-ParmVarDecl 0x2c85d50 <<invalid sloc>> <invalid sloc> implicit 'void *'
| `-VisibilityAttr 0x2c85d10 <<invalid sloc>> Implicit Default
|-CXXConstructorDecl 0x2c85f98 parent 0x2c55a90 prev 0x2c55df8 <line:11:1, col:12> col:6 BBB 'void ()'
| |-CXXCtorInitializer Field 0x2c55c60 'aaa' 'AAA'
| | `-CXXConstructExpr 0x2c86080 <col:6> 'AAA' 'void () noexcept'
| `-CompoundStmt 0x2c860e0 <col:11, col:12>
`-CXXRecordDecl 0x2c860f0 <line:14:1, line:17:1> line:14:7 class CCC definition
  |-DefinitionData pass_in_registers standard_layout trivially_copyable trivial literal
  | |-DefaultConstructor exists trivial needs_implicit
  | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
  | |-MoveConstructor exists simple trivial needs_implicit
  | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
  | |-MoveAssignment exists simple trivial needs_implicit
  | `-Destructor simple irrelevant trivial needs_implicit
  |-CXXRecordDecl 0x2c86218 <col:1, col:7> col:7 implicit class CCC
  `-FieldDecl 0x2c862c0 <line:16:5, col:9> col:9 aaa 'AAA'
TranslationUnitDecl 0x2bb6ec8 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x2bb77a0 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x2bb7460 '__int128'
|-TypedefDecl 0x2bb7808 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x2bb7480 'unsigned __int128'
|-TypedefDecl 0x2bb7b48 <<invalid sloc>> <invalid sloc> implicit __NSConstantString '__NSConstantString_tag'
| `-RecordType 0x2bb78f0 '__NSConstantString_tag'
|   `-CXXRecord 0x2bb7858 '__NSConstantString_tag'
|-TypedefDecl 0x2bf1350 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x2bb7ba0 'char *'
|   `-BuiltinType 0x2bb6f60 'char'
|-TypedefDecl 0x2bf1688 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list '__va_list_tag [1]'
| `-ConstantArrayType 0x2bf1630 '__va_list_tag [1]' 1 
|   `-RecordType 0x2bf1440 '__va_list_tag'
|     `-CXXRecord 0x2bf13a0 '__va_list_tag'
|-CXXRecordDecl 0x2bf16d8 <./testClass.hpp:3:1, line:7:1> line:3:8 referenced struct AAA definition
| |-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| | |-DefaultConstructor exists trivial
| | |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| | |-MoveConstructor exists simple trivial
| | |-CopyAssignment trivial has_const_param implicit_has_const_param
| | |-MoveAssignment exists simple trivial
| | `-Destructor simple irrelevant trivial
| |-CXXRecordDecl 0x2bf17f8 <col:1, col:8> col:8 implicit struct AAA
| |-FieldDecl 0x2bf18a8 <line:4:5, col:9> col:9 number 'int'
| |-FieldDecl 0x2bf1900 <line:5:5, col:10> col:10 ch 'char'
| |-CXXMethodDecl 0x2bf19d0 <line:6:5, col:17> col:10 method 'void ()'
| |-CXXMethodDecl 0x2c20620 <line:3:8> col:8 implicit constexpr operator= 'AAA &(const AAA &)' inline default trivial noexcept-unevaluated 0x2c20620
| | `-ParmVarDecl 0x2c20740 <col:8> col:8 'const AAA &'
| |-CXXMethodDecl 0x2c207d8 <col:8> col:8 implicit constexpr operator= 'AAA &(AAA &&)' inline default trivial noexcept-unevaluated 0x2c207d8
| | `-ParmVarDecl 0x2c20900 <col:8> col:8 'AAA &&'
| |-CXXDestructorDecl 0x2c20d50 <col:8> col:8 implicit ~AAA 'void () noexcept' inline default trivial
| |-CXXConstructorDecl 0x2c20f00 <col:8> col:8 implicit used AAA 'void () noexcept' inline default trivial
| | `-CompoundStmt 0x2c21328 <col:8>
| |-CXXConstructorDecl 0x2c20fe8 <col:8> col:8 implicit constexpr AAA 'void (const AAA &)' inline default trivial noexcept-unevaluated 0x2c20fe8
| | `-ParmVarDecl 0x2c21120 <col:8> col:8 'const AAA &'
| `-CXXConstructorDecl 0x2c21188 <col:8> col:8 implicit constexpr AAA 'void (AAA &&)' inline default trivial noexcept-unevaluated 0x2c21188
|   `-ParmVarDecl 0x2c212c0 <col:8> col:8 'AAA &&'
|-CXXRecordDecl 0x2bf1a90 <line:9:1, line:18:1> line:9:7 class BBB definition
| |-DefinitionData polymorphic has_user_declared_ctor can_const_default_init
| | |-DefaultConstructor exists non_trivial user_provided
| | |-CopyConstructor simple non_trivial has_const_param implicit_has_const_param
| | |-MoveConstructor
| | |-CopyAssignment non_trivial has_const_param implicit_has_const_param
| | |-MoveAssignment
| | `-Destructor non_trivial user_declared
| |-CXXRecordDecl 0x2bf1bb8 <col:1, col:7> col:7 implicit referenced class BBB
| |-FieldDecl 0x2bf1c60 <line:11:5, col:9> col:9 aaa 'AAA'
| |-FieldDecl 0x2bf1cc0 <line:12:5, col:9> col:9 class_number 'int'
| |-FieldDecl 0x2bf1d18 <line:13:5, col:10> col:10 class_ch 'char'
| |-AccessSpecDecl 0x2bf1d60 <line:14:1, col:7> col:1 public
| |-CXXConstructorDecl 0x2bf1df8 <line:15:5, col:9> col:5 BBB 'void ()'
| |-CXXDestructorDecl 0x2bf1ef8 <line:16:5, col:18> col:13 used ~BBB 'void () noexcept' virtual
| |-CXXMethodDecl 0x2bf1fc8 <line:17:5, col:17> col:10 method 'void ()'
| |-CXXMethodDecl 0x2bf2108 <line:9:7> col:7 implicit operator= 'BBB &(const BBB &)' inline default noexcept-unevaluated 0x2bf2108
| | `-ParmVarDecl 0x2bf2230 <col:7> col:7 'const BBB &'
| `-CXXConstructorDecl 0x2c21df8 <col:7> col:7 implicit constexpr BBB 'void (const BBB &)' inline default noexcept-unevaluated 0x2c21df8
|   `-ParmVarDecl 0x2c21f30 <col:7> col:7 'const BBB &'
|-CXXMethodDecl 0x2c209a8 parent 0x2bf16d8 prev 0x2bf19d0 <./testClass.cpp:3:1, col:20> col:11 method 'void ()'
| `-CompoundStmt 0x2c20a90 <col:19, col:20>
|-CXXMethodDecl 0x2c20ae0 parent 0x2bf1a90 prev 0x2bf1fc8 <line:5:1, col:20> col:11 method 'void ()'
| `-CompoundStmt 0x2c20bc8 <col:19, col:20>
|-CXXDestructorDecl 0x2c20c28 parent 0x2bf1a90 prev 0x2bf1ef8 <line:7:1, line:9:1> line:7:6 used ~BBB 'void () noexcept'
| `-CompoundStmt 0x2c21380 <col:12, line:9:1>
|   `-DeclStmt 0x2c21368 <line:8:5, col:12>
|     `-VarDecl 0x2c20e80 <col:5, col:9> col:9 aaa 'AAA' callinit
|       `-CXXConstructExpr 0x2c21338 <col:9> 'AAA' 'void () noexcept'
|-FunctionDecl 0x2c213d8 <<invalid sloc>> <invalid sloc> implicit operator new 'void *(unsigned long)'
| |-ParmVarDecl 0x2c214b8 <<invalid sloc>> <invalid sloc> implicit 'unsigned long'
| `-VisibilityAttr 0x2c21478 <<invalid sloc>> Implicit Default
|-FunctionDecl 0x2c21520 <<invalid sloc>> <invalid sloc> implicit operator new[] 'void *(unsigned long)'
| |-ParmVarDecl 0x2c21a40 <<invalid sloc>> <invalid sloc> implicit 'unsigned long'
| `-VisibilityAttr 0x2c215c0 <<invalid sloc>> Implicit Default
|-FunctionDecl 0x2c21b28 <<invalid sloc>> <invalid sloc> implicit used operator delete 'void (void *) noexcept'
| |-ParmVarDecl 0x2c21c08 <<invalid sloc>> <invalid sloc> implicit 'void *'
| `-VisibilityAttr 0x2c21bc8 <<invalid sloc>> Implicit Default
|-FunctionDecl 0x2c21c70 <<invalid sloc>> <invalid sloc> implicit operator delete[] 'void (void *) noexcept'
| |-ParmVarDecl 0x2c21d50 <<invalid sloc>> <invalid sloc> implicit 'void *'
| `-VisibilityAttr 0x2c21d10 <<invalid sloc>> Implicit Default
|-CXXConstructorDecl 0x2c21f98 parent 0x2bf1a90 prev 0x2bf1df8 <line:11:1, col:12> col:6 BBB 'void ()'
| |-CXXCtorInitializer Field 0x2bf1c60 'aaa' 'AAA'
| | `-CXXConstructExpr 0x2c22080 <col:6> 'AAA' 'void () noexcept'
| `-CompoundStmt 0x2c220e0 <col:11, col:12>
`-CXXRecordDecl 0x2c220f0 <line:14:1, line:17:1> line:14:7 class CCC definition
  |-DefinitionData pass_in_registers standard_layout trivially_copyable trivial literal
  | |-DefaultConstructor exists trivial needs_implicit
  | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
  | |-MoveConstructor exists simple trivial needs_implicit
  | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
  | |-MoveAssignment exists simple trivial needs_implicit
  | `-Destructor simple irrelevant trivial needs_implicit
  |-CXXRecordDecl 0x2c22218 <col:1, col:7> col:7 implicit class CCC
  `-FieldDecl 0x2c222c0 <line:16:5, col:9> col:9 aaa 'AAA'
TranslationUnitDecl 0x2349ef8 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x234a7d0 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x234a490 '__int128'
|-TypedefDecl 0x234a838 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x234a4b0 'unsigned __int128'
|-TypedefDecl 0x234ab78 <<invalid sloc>> <invalid sloc> implicit __NSConstantString '__NSConstantString_tag'
| `-RecordType 0x234a920 '__NSConstantString_tag'
|   `-CXXRecord 0x234a888 '__NSConstantString_tag'
|-TypedefDecl 0x2384440 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x234abd0 'char *'
|   `-BuiltinType 0x2349f90 'char'
|-TypedefDecl 0x2384778 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list '__va_list_tag [1]'
| `-ConstantArrayType 0x2384720 '__va_list_tag [1]' 1 
|   `-RecordType 0x2384530 '__va_list_tag'
|     `-CXXRecord 0x2384490 '__va_list_tag'
|-CXXRecordDecl 0x23847c8 <./testClass.hpp:3:1, line:6:1> line:3:7 union un1 definition
| |-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal has_variant_members
| | |-DefaultConstructor exists trivial needs_implicit
| | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveConstructor exists simple trivial needs_implicit
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial needs_implicit
| |-CXXRecordDecl 0x23848e8 <col:1, col:7> col:7 implicit union un1
| `-FieldDecl 0x2384998 <line:5:5, col:9> col:9 intNum 'int'
|-NamespaceDecl 0x2384a00 <line:8:1, line:14:1> line:8:11 na1
| `-NamespaceDecl 0x2384a68 <line:10:5, line:13:5> line:10:15 na2
|   `-VarDecl 0x2384ae8 <line:12:9, col:20> col:20 testNNInt 'int' static
|-CXXRecordDecl 0x2384b48 <line:16:1, line:20:1> line:16:8 referenced struct AAA definition
| |-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| | |-DefaultConstructor exists trivial needs_implicit
| | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveConstructor exists simple trivial needs_implicit
| | |-CopyAssignment trivial has_const_param implicit_has_const_param
| | |-MoveAssignment exists simple trivial
| | `-Destructor simple irrelevant trivial needs_implicit
| |-CXXRecordDecl 0x2384c68 <col:1, col:8> col:8 implicit referenced struct AAA
| |-FieldDecl 0x2384d18 <line:17:5, col:9> col:9 number 'int'
| |-FieldDecl 0x2384d70 <line:18:5, col:10> col:10 ch 'char'
| |-CXXMethodDecl 0x2384e40 <line:19:5, col:20> col:10 AAAmethod 'void ()'
| |-CXXMethodDecl 0x23b3b08 <line:16:8> col:8 implicit constexpr operator= 'AAA &(const AAA &)' inline default trivial noexcept-unevaluated 0x23b3b08
| | `-ParmVarDecl 0x23b3c30 <col:8> col:8 'const AAA &'
| `-CXXMethodDecl 0x23b3cc8 <col:8> col:8 implicit constexpr operator= 'AAA &(AAA &&)' inline default trivial noexcept-unevaluated 0x23b3cc8
|   `-ParmVarDecl 0x23b3df0 <col:8> col:8 'AAA &&'
`-CXXRecordDecl 0x2384f00 <line:22:1, line:31:1> line:22:7 class BBB definition
  |-DefinitionData polymorphic has_user_declared_ctor can_const_default_init
  | |-DefaultConstructor exists non_trivial user_provided
  | |-CopyConstructor simple non_trivial has_const_param needs_implicit implicit_has_const_param
  | |-MoveConstructor
  | |-CopyAssignment non_trivial has_const_param implicit_has_const_param
  | |-MoveAssignment
  | `-Destructor non_trivial user_declared
  |-private 'AAA'
  |-CXXRecordDecl 0x2385068 <col:1, col:7> col:7 implicit referenced class BBB
  |-FieldDecl 0x2385110 <line:24:5, col:9> col:9 inC_aaa 'AAA'
  |-FieldDecl 0x2385170 <line:25:5, col:9> col:9 inC_number 'int'
  |-FieldDecl 0x23851c8 <line:26:5, col:10> col:10 inC_ch 'char'
  |-AccessSpecDecl 0x2385210 <line:27:1, col:7> col:1 public
  |-CXXConstructorDecl 0x23852a8 <line:28:5, col:9> col:5 BBB 'void ()'
  |-CXXDestructorDecl 0x23b3710 <line:29:5, col:18> col:13 ~BBB 'void ()' virtual noexcept-unevaluated 0x23b3710
  |-CXXMethodDecl 0x23b37e0 <line:30:5, col:20> col:10 BBBmethod 'void ()'
  `-CXXMethodDecl 0x23b3918 <line:22:7> col:7 implicit operator= 'BBB &(const BBB &)' inline default noexcept-unevaluated 0x23b3918
    `-ParmVarDecl 0x23b3a40 <col:7> col:7 'const BBB &'
TranslationUnitDecl 0x2331428 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x2331d00 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x23319c0 '__int128'
|-TypedefDecl 0x2331d68 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x23319e0 'unsigned __int128'
|-TypedefDecl 0x23320a8 <<invalid sloc>> <invalid sloc> implicit __NSConstantString '__NSConstantString_tag'
| `-RecordType 0x2331e50 '__NSConstantString_tag'
|   `-CXXRecord 0x2331db8 '__NSConstantString_tag'
|-TypedefDecl 0x2362910 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x2332100 'char *'
|   `-BuiltinType 0x23314c0 'char'
|-TypedefDecl 0x2362c48 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list '__va_list_tag [1]'
| `-ConstantArrayType 0x2362bf0 '__va_list_tag [1]' 1 
|   `-RecordType 0x2362a00 '__va_list_tag'
|     `-CXXRecord 0x2362960 '__va_list_tag'
|-CXXRecordDecl 0x2362c98 <./testClass.hpp:3:1, line:6:1> line:3:7 union un1 definition
| |-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal has_variant_members
| | |-DefaultConstructor exists trivial needs_implicit
| | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveConstructor exists simple trivial needs_implicit
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial needs_implicit
| |-CXXRecordDecl 0x2362db8 <col:1, col:7> col:7 implicit union un1
| `-FieldDecl 0x2362e68 <line:5:5, col:9> col:9 intNum 'int'
|-NamespaceDecl 0x2362ed0 <line:8:1, line:14:1> line:8:11 na1
| `-NamespaceDecl 0x2362f38 <line:10:5, line:13:5> line:10:15 na2
|   `-VarDecl 0x2362fb8 <line:12:9, col:20> col:20 used testNNInt 'int' static
|-CXXRecordDecl 0x2363018 <line:16:1, line:20:1> line:16:8 referenced struct AAA definition
| |-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| | |-DefaultConstructor exists trivial
| | |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| | |-MoveConstructor exists simple trivial
| | |-CopyAssignment trivial has_const_param implicit_has_const_param
| | |-MoveAssignment exists simple trivial
| | `-Destructor simple irrelevant trivial
| |-CXXRecordDecl 0x2363138 <col:1, col:8> col:8 implicit referenced struct AAA
| |-FieldDecl 0x23631e8 <line:17:5, col:9> col:9 number 'int'
| |-FieldDecl 0x2363240 <line:18:5, col:10> col:10 ch 'char'
| |-CXXMethodDecl 0x2363310 <line:19:5, col:20> col:10 AAAmethod 'void ()'
| |-CXXMethodDecl 0x23bcb68 <line:16:8> col:8 implicit constexpr operator= 'AAA &(const AAA &)' inline default trivial noexcept-unevaluated 0x23bcb68
| | `-ParmVarDecl 0x23bcc90 <col:8> col:8 'const AAA &'
| |-CXXMethodDecl 0x23bcd28 <col:8> col:8 implicit constexpr operator= 'AAA &(AAA &&)' inline default trivial noexcept-unevaluated 0x23bcd28
| | `-ParmVarDecl 0x23bce50 <col:8> col:8 'AAA &&'
| |-CXXDestructorDecl 0x23bd2a0 <col:8> col:8 implicit ~AAA 'void () noexcept' inline default trivial
| |-CXXConstructorDecl 0x23bd530 <col:8> col:8 implicit used AAA 'void () noexcept' inline default trivial
| | `-CompoundStmt 0x23bd988 <col:8>
| |-CXXConstructorDecl 0x23bd618 <col:8> col:8 implicit constexpr AAA 'void (const AAA &)' inline default trivial noexcept-unevaluated 0x23bd618
| | `-ParmVarDecl 0x23bd780 <col:8> col:8 'const AAA &'
| `-CXXConstructorDecl 0x23bd7e8 <col:8> col:8 implicit constexpr AAA 'void (AAA &&)' inline default trivial noexcept-unevaluated 0x23bd7e8
|   `-ParmVarDecl 0x23bd920 <col:8> col:8 'AAA &&'
|-CXXRecordDecl 0x23633d0 <line:22:1, line:31:1> line:22:7 class BBB definition
| |-DefinitionData polymorphic has_user_declared_ctor can_const_default_init
| | |-DefaultConstructor exists non_trivial user_provided
| | |-CopyConstructor simple non_trivial has_const_param implicit_has_const_param
| | |-MoveConstructor
| | |-CopyAssignment non_trivial has_const_param implicit_has_const_param
| | |-MoveAssignment
| | `-Destructor non_trivial user_declared
| |-private 'AAA'
| |-CXXRecordDecl 0x2363538 <col:1, col:7> col:7 implicit referenced class BBB
| |-FieldDecl 0x23635e0 <line:24:5, col:9> col:9 inC_aaa 'AAA'
| |-FieldDecl 0x2363640 <line:25:5, col:9> col:9 inC_number 'int'
| |-FieldDecl 0x2363698 <line:26:5, col:10> col:10 inC_ch 'char'
| |-AccessSpecDecl 0x23636e0 <line:27:1, col:7> col:1 public
| |-CXXConstructorDecl 0x2363778 <line:28:5, col:9> col:5 BBB 'void ()'
| |-CXXDestructorDecl 0x23bc770 <line:29:5, col:18> col:13 used ~BBB 'void () noexcept' virtual
| |-CXXMethodDecl 0x23bc840 <line:30:5, col:20> col:10 BBBmethod 'void ()'
| |-CXXMethodDecl 0x23bc978 <line:22:7> col:7 implicit operator= 'BBB &(const BBB &)' inline default noexcept-unevaluated 0x23bc978
| | `-ParmVarDecl 0x23bcaa0 <col:7> col:7 'const BBB &'
| `-CXXConstructorDecl 0x23be0b8 <col:7> col:7 implicit constexpr BBB 'void (const BBB &)' inline default noexcept-unevaluated 0x23be0b8
|   `-ParmVarDecl 0x23be1f0 <col:7> col:7 'const BBB &'
|-CXXMethodDecl 0x23bcef8 parent 0x2363018 prev 0x2363310 <./testClass.cpp:3:1, col:23> col:11 AAAmethod 'void ()'
| `-CompoundStmt 0x23bcfe0 <col:22, col:23>
|-CXXMethodDecl 0x23bd030 parent 0x23633d0 prev 0x23bc840 <line:5:1, col:23> col:11 BBBmethod 'void ()'
| `-CompoundStmt 0x23bd118 <col:22, col:23>
|-CXXDestructorDecl 0x23bd178 parent 0x23633d0 prev 0x23bc770 <line:7:1, line:11:1> line:7:6 used ~BBB 'void () noexcept'
| `-CompoundStmt 0x23bda70 <col:12, line:11:1>
|   |-BinaryOperator 0x23bd478 <line:8:5, col:27> 'int' lvalue '='
|   | |-DeclRefExpr 0x23bd420 <col:5, col:15> 'int' lvalue Var 0x2362fb8 'testNNInt' 'int'
|   | `-IntegerLiteral 0x23bd458 <col:27> 'int' 10
|   |-DeclStmt 0x23bd9c8 <line:9:5, col:12>
|   | `-VarDecl 0x23bd4b0 <col:5, col:9> col:9 aaa 'AAA' callinit
|   |   `-CXXConstructExpr 0x23bd998 <col:9> 'AAA' 'void () noexcept'
|   `-DeclStmt 0x23bda58 <line:10:5, col:18>
|     `-VarDecl 0x23bd9f8 <col:5, col:9> col:9 cppIntNum 'int'
|-FunctionDecl 0x23bdad8 <<invalid sloc>> <invalid sloc> implicit operator new 'void *(unsigned long)'
| |-ParmVarDecl 0x23bdbb8 <<invalid sloc>> <invalid sloc> implicit 'unsigned long'
| `-VisibilityAttr 0x23bdb78 <<invalid sloc>> Implicit Default
|-FunctionDecl 0x23bdc20 <<invalid sloc>> <invalid sloc> implicit operator new[] 'void *(unsigned long)'
| |-ParmVarDecl 0x23bdd00 <<invalid sloc>> <invalid sloc> implicit 'unsigned long'
| `-VisibilityAttr 0x23bdcc0 <<invalid sloc>> Implicit Default
|-FunctionDecl 0x23bdde8 <<invalid sloc>> <invalid sloc> implicit used operator delete 'void (void *) noexcept'
| |-ParmVarDecl 0x23bdec8 <<invalid sloc>> <invalid sloc> implicit 'void *'
| `-VisibilityAttr 0x23bde88 <<invalid sloc>> Implicit Default
|-FunctionDecl 0x23bdf30 <<invalid sloc>> <invalid sloc> implicit operator delete[] 'void (void *) noexcept'
| |-ParmVarDecl 0x23be010 <<invalid sloc>> <invalid sloc> implicit 'void *'
| `-VisibilityAttr 0x23bdfd0 <<invalid sloc>> Implicit Default
|-CXXConstructorDecl 0x23be258 parent 0x23633d0 prev 0x2363778 <line:13:1, col:12> col:6 BBB 'void ()'
| |-CXXCtorInitializer 'AAA'
| | `-CXXConstructExpr 0x23be340 <col:6> 'AAA' 'void () noexcept'
| |-CXXCtorInitializer Field 0x23635e0 'inC_aaa' 'AAA'
| | `-CXXConstructExpr 0x23be3a8 <col:6> 'AAA' 'void () noexcept'
| `-CompoundStmt 0x23be410 <col:11, col:12>
`-CXXRecordDecl 0x23be420 <line:15:1, line:19:1> line:15:7 class CCC definition
  |-DefinitionData pass_in_registers standard_layout trivially_copyable trivial literal
  | |-DefaultConstructor exists trivial needs_implicit
  | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
  | |-MoveConstructor exists simple trivial needs_implicit
  | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
  | |-MoveAssignment exists simple trivial needs_implicit
  | `-Destructor simple irrelevant trivial needs_implicit
  |-CXXRecordDecl 0x23be548 <col:1, col:7> col:7 implicit class CCC
  |-FieldDecl 0x23be5f0 <line:17:5, col:9> col:9 aaa 'AAA'
  `-FieldDecl 0x23be650 <line:18:5, col:9> col:9 cppIntNum 'int'
TranslationUnitDecl 0x247def8 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x247e7d0 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x247e490 '__int128'
|-TypedefDecl 0x247e838 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x247e4b0 'unsigned __int128'
|-TypedefDecl 0x247eb78 <<invalid sloc>> <invalid sloc> implicit __NSConstantString '__NSConstantString_tag'
| `-RecordType 0x247e920 '__NSConstantString_tag'
|   `-CXXRecord 0x247e888 '__NSConstantString_tag'
|-TypedefDecl 0x24b8440 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x247ebd0 'char *'
|   `-BuiltinType 0x247df90 'char'
|-TypedefDecl 0x24b8778 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list '__va_list_tag [1]'
| `-ConstantArrayType 0x24b8720 '__va_list_tag [1]' 1 
|   `-RecordType 0x24b8530 '__va_list_tag'
|     `-CXXRecord 0x24b8490 '__va_list_tag'
|-CXXRecordDecl 0x24b87c8 <./testClass.hpp:3:1, line:6:1> line:3:7 union un1 definition
| |-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal has_variant_members
| | |-DefaultConstructor exists trivial needs_implicit
| | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveConstructor exists simple trivial needs_implicit
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial needs_implicit
| |-CXXRecordDecl 0x24b88e8 <col:1, col:7> col:7 implicit union un1
| `-FieldDecl 0x24b8998 <line:5:5, col:9> col:9 intNum 'int'
|-NamespaceDecl 0x24b8a00 <line:8:1, line:14:1> line:8:11 na1
| `-NamespaceDecl 0x24b8a68 <line:10:5, line:13:5> line:10:15 na2
|   `-VarDecl 0x24b8ae8 <line:12:9, col:20> col:20 testNNInt 'int' static
|-CXXRecordDecl 0x24b8b48 <line:16:1, line:20:1> line:16:8 referenced struct AAA definition
| |-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| | |-DefaultConstructor exists trivial needs_implicit
| | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveConstructor exists simple trivial needs_implicit
| | |-CopyAssignment trivial has_const_param implicit_has_const_param
| | |-MoveAssignment exists simple trivial
| | `-Destructor simple irrelevant trivial needs_implicit
| |-CXXRecordDecl 0x24b8c68 <col:1, col:8> col:8 implicit referenced struct AAA
| |-FieldDecl 0x24b8d18 <line:17:5, col:9> col:9 number 'int'
| |-FieldDecl 0x24b8d70 <line:18:5, col:10> col:10 ch 'char'
| |-CXXMethodDecl 0x24b8e40 <line:19:5, col:20> col:10 AAAmethod 'void ()'
| |-CXXMethodDecl 0x24e7b08 <line:16:8> col:8 implicit constexpr operator= 'AAA &(const AAA &)' inline default trivial noexcept-unevaluated 0x24e7b08
| | `-ParmVarDecl 0x24e7c30 <col:8> col:8 'const AAA &'
| `-CXXMethodDecl 0x24e7cc8 <col:8> col:8 implicit constexpr operator= 'AAA &(AAA &&)' inline default trivial noexcept-unevaluated 0x24e7cc8
|   `-ParmVarDecl 0x24e7df0 <col:8> col:8 'AAA &&'
`-CXXRecordDecl 0x24b8f00 <line:22:1, line:31:1> line:22:7 class BBB definition
  |-DefinitionData polymorphic has_user_declared_ctor can_const_default_init
  | |-DefaultConstructor exists non_trivial user_provided
  | |-CopyConstructor simple non_trivial has_const_param needs_implicit implicit_has_const_param
  | |-MoveConstructor
  | |-CopyAssignment non_trivial has_const_param implicit_has_const_param
  | |-MoveAssignment
  | `-Destructor non_trivial user_declared
  |-private 'AAA'
  |-CXXRecordDecl 0x24b9068 <col:1, col:7> col:7 implicit referenced class BBB
  |-FieldDecl 0x24b9110 <line:24:5, col:9> col:9 inC_aaa 'AAA'
  |-FieldDecl 0x24b9170 <line:25:5, col:9> col:9 inC_number 'int'
  |-FieldDecl 0x24b91c8 <line:26:5, col:10> col:10 inC_ch 'char'
  |-AccessSpecDecl 0x24b9210 <line:27:1, col:7> col:1 public
  |-CXXConstructorDecl 0x24b92a8 <line:28:5, col:9> col:5 BBB 'void ()'
  |-CXXDestructorDecl 0x24e7710 <line:29:5, col:18> col:13 ~BBB 'void ()' virtual noexcept-unevaluated 0x24e7710
  |-CXXMethodDecl 0x24e77e0 <line:30:5, col:20> col:10 BBBmethod 'void ()'
  `-CXXMethodDecl 0x24e7918 <line:22:7> col:7 implicit operator= 'BBB &(const BBB &)' inline default noexcept-unevaluated 0x24e7918
    `-ParmVarDecl 0x24e7a40 <col:7> col:7 'const BBB &'
TranslationUnitDecl 0x2465428 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x2465d00 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x24659c0 '__int128'
|-TypedefDecl 0x2465d68 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x24659e0 'unsigned __int128'
|-TypedefDecl 0x24660a8 <<invalid sloc>> <invalid sloc> implicit __NSConstantString '__NSConstantString_tag'
| `-RecordType 0x2465e50 '__NSConstantString_tag'
|   `-CXXRecord 0x2465db8 '__NSConstantString_tag'
|-TypedefDecl 0x2496910 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x2466100 'char *'
|   `-BuiltinType 0x24654c0 'char'
|-TypedefDecl 0x2496c48 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list '__va_list_tag [1]'
| `-ConstantArrayType 0x2496bf0 '__va_list_tag [1]' 1 
|   `-RecordType 0x2496a00 '__va_list_tag'
|     `-CXXRecord 0x2496960 '__va_list_tag'
|-CXXRecordDecl 0x2496c98 <./testClass.hpp:3:1, line:6:1> line:3:7 union un1 definition
| |-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal has_variant_members
| | |-DefaultConstructor exists trivial needs_implicit
| | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveConstructor exists simple trivial needs_implicit
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial needs_implicit
| |-CXXRecordDecl 0x2496db8 <col:1, col:7> col:7 implicit union un1
| `-FieldDecl 0x2496e68 <line:5:5, col:9> col:9 intNum 'int'
|-NamespaceDecl 0x2496ed0 <line:8:1, line:14:1> line:8:11 na1
| `-NamespaceDecl 0x2496f38 <line:10:5, line:13:5> line:10:15 na2
|   `-VarDecl 0x2496fb8 <line:12:9, col:20> col:20 used testNNInt 'int' static
|-CXXRecordDecl 0x2497018 <line:16:1, line:20:1> line:16:8 referenced struct AAA definition
| |-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| | |-DefaultConstructor exists trivial
| | |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| | |-MoveConstructor exists simple trivial
| | |-CopyAssignment trivial has_const_param implicit_has_const_param
| | |-MoveAssignment exists simple trivial
| | `-Destructor simple irrelevant trivial
| |-CXXRecordDecl 0x2497138 <col:1, col:8> col:8 implicit referenced struct AAA
| |-FieldDecl 0x24971e8 <line:17:5, col:9> col:9 number 'int'
| |-FieldDecl 0x2497240 <line:18:5, col:10> col:10 ch 'char'
| |-CXXMethodDecl 0x2497310 <line:19:5, col:20> col:10 AAAmethod 'void ()'
| |-CXXMethodDecl 0x24f0b68 <line:16:8> col:8 implicit constexpr operator= 'AAA &(const AAA &)' inline default trivial noexcept-unevaluated 0x24f0b68
| | `-ParmVarDecl 0x24f0c90 <col:8> col:8 'const AAA &'
| |-CXXMethodDecl 0x24f0d28 <col:8> col:8 implicit constexpr operator= 'AAA &(AAA &&)' inline default trivial noexcept-unevaluated 0x24f0d28
| | `-ParmVarDecl 0x24f0e50 <col:8> col:8 'AAA &&'
| |-CXXDestructorDecl 0x24f12a0 <col:8> col:8 implicit ~AAA 'void () noexcept' inline default trivial
| |-CXXConstructorDecl 0x24f1530 <col:8> col:8 implicit used AAA 'void () noexcept' inline default trivial
| | `-CompoundStmt 0x24f1988 <col:8>
| |-CXXConstructorDecl 0x24f1618 <col:8> col:8 implicit constexpr AAA 'void (const AAA &)' inline default trivial noexcept-unevaluated 0x24f1618
| | `-ParmVarDecl 0x24f1780 <col:8> col:8 'const AAA &'
| `-CXXConstructorDecl 0x24f17e8 <col:8> col:8 implicit constexpr AAA 'void (AAA &&)' inline default trivial noexcept-unevaluated 0x24f17e8
|   `-ParmVarDecl 0x24f1920 <col:8> col:8 'AAA &&'
|-CXXRecordDecl 0x24973d0 <line:22:1, line:31:1> line:22:7 class BBB definition
| |-DefinitionData polymorphic has_user_declared_ctor can_const_default_init
| | |-DefaultConstructor exists non_trivial user_provided
| | |-CopyConstructor simple non_trivial has_const_param implicit_has_const_param
| | |-MoveConstructor
| | |-CopyAssignment non_trivial has_const_param implicit_has_const_param
| | |-MoveAssignment
| | `-Destructor non_trivial user_declared
| |-private 'AAA'
| |-CXXRecordDecl 0x2497538 <col:1, col:7> col:7 implicit referenced class BBB
| |-FieldDecl 0x24975e0 <line:24:5, col:9> col:9 inC_aaa 'AAA'
| |-FieldDecl 0x2497640 <line:25:5, col:9> col:9 inC_number 'int'
| |-FieldDecl 0x2497698 <line:26:5, col:10> col:10 inC_ch 'char'
| |-AccessSpecDecl 0x24976e0 <line:27:1, col:7> col:1 public
| |-CXXConstructorDecl 0x2497778 <line:28:5, col:9> col:5 BBB 'void ()'
| |-CXXDestructorDecl 0x24f0770 <line:29:5, col:18> col:13 used ~BBB 'void () noexcept' virtual
| |-CXXMethodDecl 0x24f0840 <line:30:5, col:20> col:10 BBBmethod 'void ()'
| |-CXXMethodDecl 0x24f0978 <line:22:7> col:7 implicit operator= 'BBB &(const BBB &)' inline default noexcept-unevaluated 0x24f0978
| | `-ParmVarDecl 0x24f0aa0 <col:7> col:7 'const BBB &'
| `-CXXConstructorDecl 0x24f20b8 <col:7> col:7 implicit constexpr BBB 'void (const BBB &)' inline default noexcept-unevaluated 0x24f20b8
|   `-ParmVarDecl 0x24f21f0 <col:7> col:7 'const BBB &'
|-CXXMethodDecl 0x24f0ef8 parent 0x2497018 prev 0x2497310 <./testClass.cpp:3:1, col:23> col:11 AAAmethod 'void ()'
| `-CompoundStmt 0x24f0fe0 <col:22, col:23>
|-CXXMethodDecl 0x24f1030 parent 0x24973d0 prev 0x24f0840 <line:5:1, col:23> col:11 BBBmethod 'void ()'
| `-CompoundStmt 0x24f1118 <col:22, col:23>
|-CXXDestructorDecl 0x24f1178 parent 0x24973d0 prev 0x24f0770 <line:7:1, line:11:1> line:7:6 used ~BBB 'void () noexcept'
| `-CompoundStmt 0x24f1a70 <col:12, line:11:1>
|   |-BinaryOperator 0x24f1478 <line:8:5, col:27> 'int' lvalue '='
|   | |-DeclRefExpr 0x24f1420 <col:5, col:15> 'int' lvalue Var 0x2496fb8 'testNNInt' 'int'
|   | `-IntegerLiteral 0x24f1458 <col:27> 'int' 10
|   |-DeclStmt 0x24f19c8 <line:9:5, col:12>
|   | `-VarDecl 0x24f14b0 <col:5, col:9> col:9 aaa 'AAA' callinit
|   |   `-CXXConstructExpr 0x24f1998 <col:9> 'AAA' 'void () noexcept'
|   `-DeclStmt 0x24f1a58 <line:10:5, col:18>
|     `-VarDecl 0x24f19f8 <col:5, col:9> col:9 cppIntNum 'int'
|-FunctionDecl 0x24f1ad8 <<invalid sloc>> <invalid sloc> implicit operator new 'void *(unsigned long)'
| |-ParmVarDecl 0x24f1bb8 <<invalid sloc>> <invalid sloc> implicit 'unsigned long'
| `-VisibilityAttr 0x24f1b78 <<invalid sloc>> Implicit Default
|-FunctionDecl 0x24f1c20 <<invalid sloc>> <invalid sloc> implicit operator new[] 'void *(unsigned long)'
| |-ParmVarDecl 0x24f1d00 <<invalid sloc>> <invalid sloc> implicit 'unsigned long'
| `-VisibilityAttr 0x24f1cc0 <<invalid sloc>> Implicit Default
|-FunctionDecl 0x24f1de8 <<invalid sloc>> <invalid sloc> implicit used operator delete 'void (void *) noexcept'
| |-ParmVarDecl 0x24f1ec8 <<invalid sloc>> <invalid sloc> implicit 'void *'
| `-VisibilityAttr 0x24f1e88 <<invalid sloc>> Implicit Default
|-FunctionDecl 0x24f1f30 <<invalid sloc>> <invalid sloc> implicit operator delete[] 'void (void *) noexcept'
| |-ParmVarDecl 0x24f2010 <<invalid sloc>> <invalid sloc> implicit 'void *'
| `-VisibilityAttr 0x24f1fd0 <<invalid sloc>> Implicit Default
|-CXXConstructorDecl 0x24f2258 parent 0x24973d0 prev 0x2497778 <line:13:1, col:12> col:6 BBB 'void ()'
| |-CXXCtorInitializer 'AAA'
| | `-CXXConstructExpr 0x24f2340 <col:6> 'AAA' 'void () noexcept'
| |-CXXCtorInitializer Field 0x24975e0 'inC_aaa' 'AAA'
| | `-CXXConstructExpr 0x24f23a8 <col:6> 'AAA' 'void () noexcept'
| `-CompoundStmt 0x24f2410 <col:11, col:12>
`-CXXRecordDecl 0x24f2420 <line:15:1, line:19:1> line:15:7 class CCC definition
  |-DefinitionData pass_in_registers standard_layout trivially_copyable trivial literal
  | |-DefaultConstructor exists trivial needs_implicit
  | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
  | |-MoveConstructor exists simple trivial needs_implicit
  | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
  | |-MoveAssignment exists simple trivial needs_implicit
  | `-Destructor simple irrelevant trivial needs_implicit
  |-CXXRecordDecl 0x24f2548 <col:1, col:7> col:7 implicit class CCC
  |-FieldDecl 0x24f25f0 <line:17:5, col:9> col:9 aaa 'AAA'
  `-FieldDecl 0x24f2650 <line:18:5, col:9> col:9 cppIntNum 'int'
